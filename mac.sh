#!/bin/bash
set -e

echo "=== üçé –ü–æ–ª–Ω–∞—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è Ubuntu 24.04 –ø–æ–¥ macOS ==="
echo "    –¢–µ—Ä–º–∏–Ω–∞–ª + –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å + –¢–µ–º—ã"
echo ""

# –û—á–∏—Å—Ç–∫–∞ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤..."
rm -rf ~/macos-setup ~/blur-my-shell ~/YosemiteSanFranciscoFont ~/WhiteSur-gdm 2>/dev/null || true

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_command() {
    if [ $? -eq 0 ]; then
        echo "‚úÖ $1 –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: $1"
        exit 1
    fi
}

check_url() {
    if wget --spider "$1" 2>/dev/null; then
        return 0
    else
        echo "‚ö†Ô∏è  URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $1"
        return 1
    fi
}

print_section() {
    echo ""
    echo "[$1] $2"
    echo "$(printf '=%.0s' {1..50})"
}

# === –°–ò–°–¢–ï–ú–ù–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò ===
print_section "1/12" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
sudo apt update && sudo apt install -y \
    git curl wget zsh fonts-powerline build-essential \
    neofetch htop tree bat eza fd-find ripgrep fzf tmux \
    gnome-tweaks gnome-shell-extensions \
    gnome-shell-extension-manager chrome-gnome-shell \
    unzip libglib2.0-dev-bin sassc make gettext \
    xclip
check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"

# === OH MY ZSH –ò –¢–ï–†–ú–ò–ù–ê–õ ===
print_section "2/12" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (Oh My Zsh + Powerlevel10k)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh..."
    sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)" "" --unattended
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã Powerlevel10k
if [ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" ]; then
    echo "üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã Powerlevel10k..."
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \
        ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ –¥–ª—è zsh
echo "üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ zsh..."
PLUGINS_DIR="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins"

plugins=("zsh-autosuggestions" "zsh-syntax-highlighting" "zsh-completions" "fast-syntax-highlighting")
repos=("https://github.com/zsh-users/zsh-autosuggestions" 
       "https://github.com/zsh-users/zsh-syntax-highlighting.git" 
       "https://github.com/zsh-users/zsh-completions"
       "https://github.com/zdharma-continuum/fast-syntax-highlighting.git")

for i in "${!plugins[@]}"; do
    if [ ! -d "$PLUGINS_DIR/${plugins[$i]}" ]; then
        git clone "${repos[$i]}" "$PLUGINS_DIR/${plugins[$i]}"
    fi
done

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ .zshrc
if [ -f "$HOME/.zshrc" ]; then
    cp "$HOME/.zshrc" "$HOME/.zshrc.backup.$(date +%Y%m%d_%H%M%S)"
    echo "üìã –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø .zshrc"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .zshrc
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ .zshrc..."
cat > "$HOME/.zshrc" << 'EOF'
# Path to your oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"

# –¢–µ–º–∞
ZSH_THEME="powerlevel10k/powerlevel10k"

# –ü–ª–∞–≥–∏–Ω—ã
plugins=(
    git sudo docker docker-compose npm node python pip ubuntu
    zsh-autosuggestions zsh-syntax-highlighting zsh-completions
    fast-syntax-highlighting history-substring-search
    colored-man-pages command-not-found extract z
)

source $ZSH/oh-my-zsh.sh

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
export EDITOR='nano'
export BROWSER='firefox'

# –ê–ª–∏–∞—Å—ã –≤ —Å—Ç–∏–ª–µ macOS
alias ls='exa --icons'
alias ll='exa -la --icons'
alias la='exa -a --icons'
alias lt='exa --tree --icons'
alias cat='batcat'
alias find='fd'
alias grep='rg'
alias top='htop'
alias cls='clear'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ~='cd ~'
alias desktop='cd ~/Desktop'
alias downloads='cd ~/Downloads'
alias documents='cd ~/Documents'

# macOS-–ø–æ–¥–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
alias open='xdg-open'
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'

# Git –∞–ª–∏–∞—Å—ã
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git pull'
alias gd='git diff'
alias gb='git branch'
alias gco='git checkout'

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –∞–ª–∏–∞—Å—ã
alias update='sudo apt update && sudo apt upgrade'
alias install='sudo apt install'
alias search='apt search'
alias info='apt info'
alias remove='sudo apt remove'
alias autoremove='sudo apt autoremove'

# –§—É–Ω–∫—Ü–∏–∏
mkcd() { mkdir -p "$1" && cd "$1"; }
extract() { 
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# –ò—Å—Ç–æ—Ä–∏—è
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_VERIFY SHARE_HISTORY APPEND_HISTORY INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS HIST_IGNORE_ALL_DUPS HIST_REDUCE_BLANKS HIST_IGNORE_SPACE

# –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select

# FZF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
if command -v neofetch &> /dev/null; then
    neofetch
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
EOF

check_command "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"

# === –ù–ê–°–¢–†–û–ô–ö–ê –ì–û–†–Ø–ß–ò–• –ö–õ–ê–í–ò–® –¢–ï–†–ú–ò–ù–ê–õ–ê ===
print_section "3/12" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (Ctrl+C/Ctrl+V)"

if command -v gsettings &> /dev/null; then
    # –í–∫–ª—é—á–µ–Ω–∏–µ Ctrl+C/Ctrl+V –≤ GNOME Terminal
    gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ copy '<Primary>c'
    gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ paste '<Primary>v'
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
    PROFILE=$(gsettings get org.gnome.Terminal.ProfilesList default | tr -d "'")
    PROFILE_PATH="/org/gnome/terminal/legacy/profiles:/:${PROFILE}/"
    
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" use-system-font false
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" font 'MesloLGS NF 12'
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" use-theme-colors false
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" background-color 'rgb(40,44,52)'
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" foreground-color 'rgb(171,178,191)'
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" cursor-shape 'block'
    gsettings set "org.gnome.Terminal.Legacy.Profile:${PROFILE_PATH}" cursor-blink-mode 'off'
    
    check_command "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
fi

# === –£–°–¢–ê–ù–û–í–ö–ê –®–†–ò–§–¢–û–í ===
print_section "4/12" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤ (Nerd Fonts + San Francisco)"

FONT_DIR="$HOME/.local/share/fonts"
mkdir -p "$FONT_DIR"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nerd Fonts
echo "üî§ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nerd Fonts..."
nerd_fonts=("Meslo" "FiraCode" "JetBrainsMono" "Hack")
for font in "${nerd_fonts[@]}"; do
    if [ ! -f "$FONT_DIR/${font}*.ttf" ]; then
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–∞ $font..."
        if check_url "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/${font}.zip"; then
            wget -qO "/tmp/${font}.zip" "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/${font}.zip"
            unzip -o "/tmp/${font}.zip" -d "$FONT_DIR" >/dev/null 2>&1
            rm "/tmp/${font}.zip"
        fi
    fi
done

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ San Francisco —à—Ä–∏—Ñ—Ç–æ–≤
echo "üçé –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–∞ San Francisco..."
rm -rf ~/macos-setup
mkdir -p ~/macos-setup && cd ~/macos-setup

if git ls-remote https://github.com/supermarin/YosemiteSanFranciscoFont.git &>/dev/null; then
    git clone https://github.com/supermarin/YosemiteSanFranciscoFont.git
    if [ -d "YosemiteSanFranciscoFont" ] && [ "$(ls -A YosemiteSanFranciscoFont/*.ttf 2>/dev/null)" ]; then
        cp YosemiteSanFranciscoFont/*.ttf "$FONT_DIR/"
    fi
fi

fc-cache -fv >/dev/null 2>&1
cd ~
check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤"

# === –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –¢–ï–ú ===
print_section "5/12" "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–µ–º"

# –°–æ–∑–¥–∞–µ–º backup –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
if [ -d ~/.themes ] || [ -d ~/.icons ]; then
    BACKUP_DIR="~/backup_themes_$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$BACKUP_DIR"
    [ -d ~/.themes ] && cp -r ~/.themes "$BACKUP_DIR/" 2>/dev/null || true
    [ -d ~/.icons ] && cp -r ~/.icons "$BACKUP_DIR/" 2>/dev/null || true
    echo "üì¶ Backup —Å–æ–∑–¥–∞–Ω –≤ $BACKUP_DIR"
fi

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ç–µ–º
rm -rf ~/.themes ~/.icons
sudo apt install --reinstall yaru-theme-gtk yaru-theme-icon -y
check_command "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–º"

# === –£–°–¢–ê–ù–û–í–ö–ê WHITESUR –¢–ï–ú ===
print_section "6/12" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WhiteSur —Ç–µ–º—ã, –∏–∫–æ–Ω–æ–∫ –∏ –∫—É—Ä—Å–æ—Ä–æ–≤"

rm -rf ~/macos-setup
mkdir -p ~/macos-setup && cd ~/macos-setup

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
whitesur_repos=("https://github.com/vinceliuice/WhiteSur-gtk-theme.git"
                "https://github.com/vinceliuice/WhiteSur-icon-theme.git"
                "https://github.com/vinceliuice/WhiteSur-cursors.git")

for repo in "${whitesur_repos[@]}"; do
    if ! git ls-remote "$repo" &>/dev/null; then
        echo "‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $repo"
        exit 1
    fi
done

echo "üì¶ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ WhiteSur..."
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git
git clone https://github.com/vinceliuice/WhiteSur-icon-theme.git
git clone https://github.com/vinceliuice/WhiteSur-cursors.git

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º
cd WhiteSur-gtk-theme && ./install.sh -c dark -t default -N mojave && cd ..
cd WhiteSur-icon-theme && ./install.sh -a && cd ..
cd WhiteSur-cursors && ./install.sh && cd ..

check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º WhiteSur"

# === –û–ë–û–ò ===
print_section "7/12" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–æ–µ–≤ macOS Catalina"

mkdir -p ~/Pictures
WALLPAPER_URL="https://raw.githubusercontent.com/linuxdotexe/macOS-Catalina-Wallpaper/master/macos-catalina.jpg"

if check_url "$WALLPAPER_URL"; then
    wget -O ~/Pictures/macos-wallpaper.jpg "$WALLPAPER_URL"
    gsettings set org.gnome.desktop.background picture-uri "file://$HOME/Pictures/macos-wallpaper.jpg"
    gsettings set org.gnome.desktop.background picture-options "zoom"
    check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–æ–µ–≤"
else
    echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–æ–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ"
fi

# === GNOME EXTENSIONS ===
print_section "8/12" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π GNOME"

mkdir -p ~/.local/share/gnome-shell/extensions

# Blur My Shell —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
if git ls-remote https://github.com/aunetx/blur-my-shell.git &>/dev/null; then
    cd ~/macos-setup
    git clone https://github.com/aunetx/blur-my-shell.git
    cd blur-my-shell
    if [ -f "Makefile" ] && command -v make &> /dev/null && command -v msgfmt &> /dev/null; then
        echo "üî® –°–±–æ—Ä–∫–∞ Blur My Shell..."
        make install
        check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Blur My Shell"
    else
        echo "‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–±–æ—Ä–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º Blur My Shell"
    fi
    cd ~
else
    echo "‚ö†Ô∏è  –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Blur My Shell –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –í–∫–ª—é—á–µ–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
gnome-extensions enable ubuntu-appindicators@ubuntu.com 2>/dev/null || echo "‚ö†Ô∏è  ubuntu-appindicators –Ω–µ –Ω–∞–π–¥–µ–Ω"
gnome-extensions enable ubuntu-dock@ubuntu.com 2>/dev/null || echo "‚ö†Ô∏è  ubuntu-dock –Ω–µ –Ω–∞–π–¥–µ–Ω"

check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π"

# === –°–ò–°–¢–ï–ú–ù–´–ï –ó–í–£–ö–ò ===
print_section "9/12" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ macOS —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–≤—É–∫–æ–≤"

mkdir -p ~/.local/share/sounds/macOS
cd ~/.local/share/sounds/macOS

SOUNDS_URL="https://github.com/B00merang-Project/macOS-sounds/archive/refs/heads/master.zip"
if check_url "$SOUNDS_URL"; then
    wget "$SOUNDS_URL" -O sounds.zip
    if [ -f "sounds.zip" ]; then
        unzip -q sounds.zip && mv macOS-sounds-master/* . 2>/dev/null || true
        rm -rf macOS-sounds-master sounds.zip
        gsettings set org.gnome.desktop.sound theme-name "macOS" 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–≤—É–∫–æ–≤—É—é —Ç–µ–º—É"
        check_command "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–≤—É–∫–æ–≤"
    fi
else
    echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–≤—É–∫–∏ macOS"
fi
cd ~

# === –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –¢–ï–ú –ò –®–†–ò–§–¢–û–í ===
print_section "10/12" "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º –∏ —à—Ä–∏—Ñ—Ç–æ–≤"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º
gsettings set org.gnome.desktop.interface gtk-theme "WhiteSur-Dark" 2>/dev/null || echo "‚ö†Ô∏è  –¢–µ–º–∞ WhiteSur-Dark –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
gsettings set org.gnome.desktop.wm.preferences theme "WhiteSur-Dark" 2>/dev/null || true
gsettings set org.gnome.desktop.interface icon-theme "WhiteSur" 2>/dev/null || echo "‚ö†Ô∏è  –ò–∫–æ–Ω–∫–∏ WhiteSur –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
gsettings set org.gnome.desktop.interface cursor-theme "WhiteSur-cursors" 2>/dev/null || echo "‚ö†Ô∏è  –ö—É—Ä—Å–æ—Ä—ã WhiteSur –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤ (—Å fallback –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–µ)
gsettings set org.gnome.desktop.interface font-name "San Francisco Display 11" 2>/dev/null || gsettings set org.gnome.desktop.interface font-name "Ubuntu 11"
gsettings set org.gnome.desktop.interface document-font-name "San Francisco Text 11" 2>/dev/null || gsettings set org.gnome.desktop.interface document-font-name "Ubuntu 11"
gsettings set org.gnome.desktop.interface monospace-font-name "SF Mono 12" 2>/dev/null || gsettings set org.gnome.desktop.interface monospace-font-name "Ubuntu Mono 13"
gsettings set org.gnome.desktop.wm.preferences titlebar-font "San Francisco Display Bold 11" 2>/dev/null || gsettings set org.gnome.desktop.wm.preferences titlebar-font "Ubuntu Bold 11"

check_command "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"

# === –ù–ê–°–¢–†–û–ô–ö–ê –î–û–ö–ê ===
print_section "11/12" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–∫–∞"

if gsettings list-schemas | grep -q "org.gnome.shell.extensions.dash-to-dock"; then
    gsettings set org.gnome.shell.extensions.dash-to-dock dock-position 'BOTTOM'
    gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false
    gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed true
    gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode 'FIXED'
    gsettings set org.gnome.shell.extensions.dash-to-dock background-opacity 0.35
    gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top false
    gsettings set org.gnome.shell.extensions.dash-to-dock intellihide false
    check_command "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–∫–∞"
else
    echo "‚ö†Ô∏è  –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ dash-to-dock –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

# === –£–°–¢–ê–ù–û–í–ö–ê ZSH –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ ===
print_section "12/12" "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"

if [ "$SHELL" != "$(which zsh)" ]; then
    echo "üß© –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
    chsh -s $(which zsh)
    echo "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∏ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è shell"
fi

# === –û–ß–ò–°–¢–ö–ê –ò –ó–ê–í–ï–†–®–ï–ù–ò–ï ===
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -rf ~/macos-setup ~/blur-my-shell ~/YosemiteSanFranciscoFont ~/WhiteSur-gdm 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
cat > "$HOME/macos-setup-complete.txt" << 'EOF'
üçé –ö–ê–°–¢–û–ú–ò–ó–ê–¶–ò–Ø UBUNTU –ü–û–î macOS –ó–ê–í–ï–†–®–ï–ù–ê!

üé® –ò–ù–¢–ï–†–§–ï–ô–°:
‚úÖ WhiteSur —Ç–µ–º—ã (Dark)
‚úÖ WhiteSur –∏–∫–æ–Ω–∫–∏ –∏ –∫—É—Ä—Å–æ—Ä—ã  
‚úÖ San Francisco —à—Ä–∏—Ñ—Ç—ã
‚úÖ macOS Catalina –æ–±–æ–∏
‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–≤—É–∫–∏ macOS
‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–∫–∞

üíª –¢–ï–†–ú–ò–ù–ê–õ:
‚úÖ Oh My Zsh + Powerlevel10k
‚úÖ –ü–ª–∞–≥–∏–Ω—ã: autosuggestions, syntax-highlighting
‚úÖ Nerd Fonts (Meslo, FiraCode, JetBrains Mono, Hack)
‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã: exa, bat, fd, ripgrep, fzf
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Ctrl+C/Ctrl+V

üéØ –ü–û–õ–ï–ó–ù–´–ï –ê–õ–ò–ê–°–´:
‚Ä¢ ls, ll, la - –∫—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Ñ–∞–π–ª–æ–≤
‚Ä¢ cat - –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞  
‚Ä¢ open - –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª/–ø–∞–ø–∫—É
‚Ä¢ pbcopy/pbpaste - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤/–∏–∑ –±—É—Ñ–µ—Ä–∞
‚Ä¢ update - –æ–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
‚Ä¢ gs, ga, gc, gp - Git –∫–æ–º–∞–Ω–¥—ã

üîß –ß–¢–û –î–ï–õ–ê–¢–¨ –î–ê–õ–¨–®–ï:
1. –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∏ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ
2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª
3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Powerlevel10k: p10k configure
4. –û—Ç–∫—Ä—ã—Ç—å GNOME Tweaks –¥–ª—è —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

üìù –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:
‚Ä¢ ~/.zshrc - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
‚Ä¢ ~/.p10k.zsh - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã Powerlevel10k
‚Ä¢ Backup —Å—Ç–∞—Ä—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ–∑–¥–∞–Ω

üÜò –ü–û–ú–û–©–¨:
‚Ä¢ p10k configure - –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–º—É
‚Ä¢ source ~/.zshrc - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
‚Ä¢ gnome-tweaks - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
EOF

echo ""
echo "üéâ –ö–ê–°–¢–û–ú–ò–ó–ê–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:"
echo "   üé® –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ —Å—Ç–∏–ª–µ macOS"
echo "   üíª –ú–æ—â–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª —Å Oh My Zsh"
echo "   ‚å®Ô∏è  –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Ctrl+C/Ctrl+V"
echo "   üî§ Nerd Fonts –∏ San Francisco"
echo "   üçé –ó–≤—É–∫–∏ –∏ –æ–±–æ–∏ macOS"
echo ""
echo "üìÑ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ~/macos-setup-complete.txt"
echo ""
echo "üîÑ –í–ê–ñ–ù–û: –í—ã–π–¥–∏—Ç–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∏ –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π!"
echo "‚öôÔ∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: GNOME Tweaks"
echo "üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: p10k configure"

if [ -d ~/backup_themes_* ]; then
    echo "üì¶ Backup —Å—Ç–∞—Ä—ã—Ö —Ç–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ~/backup_themes_*"
fi
